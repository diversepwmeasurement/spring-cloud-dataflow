jobs:
  build-extra:
    name: Build extra images
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Login to docker.io
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      name: Publish Grafana Prometheus
      uses: docker/build-push-action@v2
      with:
        context: src/grafana/prometheus/docker/grafana
        push: false
        tags: springcloud/spring-cloud-dataflow-grafana-prometheus:${{ inputs.version
          }}
    - continue-on-error: true
      name: Publish Grafana InfluxDB
      uses: docker/build-push-action@v2
      with:
        context: src/grafana/influxdb/docker/grafana
        push: false
        tags: springcloud/spring-cloud-dataflow-grafana-influxdb:${{ inputs.version
          }}
    - continue-on-error: true
      name: Publish Prometheus Local
      uses: docker/build-push-action@v2
      with:
        context: src/grafana/prometheus/docker/prometheus-local
        push: false
        tags: springcloud/spring-cloud-dataflow-prometheus-local:${{ inputs.version
          }}
  prepare:
    name: Prepare Job
    outputs:
      matrix: ${{ env.MATRIX }}
      version: ${{ env.VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        distribution: liberica
        java-version: '8'
    - continue-on-error: true
      id: matrix
      name: Load matrix
      run: "echo \"Input version: ${{ inputs.version }}\"\nif [ \"${{ inputs.version\
        \ }}\" == \"\" ]; then\n  ./mvnw help:evaluate -Dexpression=project.version\
        \ -q\n  echo \"VERSION=$(./mvnw help:evaluate -Dexpression=project.version\
        \ -q -DforceStdout)\" >> $GITHUB_ENV\nelse\n  echo \"VERSION=${{ inputs.version\
        \ }}\" >> $GITHUB_ENV\nfi          \nMATRIX=$(cat .github/workflows/images.json\
        \ | jq -c)\necho \"MATRIX=$MATRIX\"\necho \"MATRIX=$MATRIX\" >> $GITHUB_ENV\n"
      shell: bash
  publish:
    concurrency:
      group: ${{ matrix.name }}
    name: Publish
    needs:
    - prepare
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        distribution: liberica
        java-version: '8'
    - continue-on-error: true
      name: Install pack
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        pack-version: 0.30.0
    - continue-on-error: true
      name: Login to docker.io
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      name: Login to GCR
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.GCR_JSON_KEY }}
        registry: gcr.io
        username: _json_key
    - continue-on-error: true
      env:
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
        DEFAULT_JDK: '11'
        DELETE_TAGS: ${{ inputs.delete-tags }}
        TAG: ${{ needs.prepare.outputs.version }}
      name: Build and Publish ${{ matrix.name }}
      run: '.github/workflows/build-image.sh ${{ matrix.path }} ${{ matrix.image }}
        ${{ matrix.name }}

        '
      shell: bash
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
name: build-images
on:
  repository_dispatch:
    types: trigger-ga___build-images.yml
